scale_x_datetime(labels = date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph2, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "lightblue") +
ggtitle("Brecha cambiaria - Dólar Blue y Dólar Oficial") +
scale_x_datetime(labels = date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph2, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
ggtitle("Brecha cambiaria - Dólar Blue y Dólar Oficial") +
scale_x_datetime(labels = date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph2, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
ggtitle("Brecha cambiaria - Dólar Blue y Dólar Oficial") +
ylab(Valor_Dolar) +
scale_x_datetime(labels = date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph2, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
ggtitle("Brecha cambiaria - Dólar Blue y Dólar Oficial") +
ylab("Valor dólar") +
scale_x_datetime(labels = date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
rm(list=ls())
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph2 <- graph %>%
filter(Fecha >= "2018-01-01")
select(Fecha, Vendedor.x, Vendedor.y)
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph2 <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y)
graph2 <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
filter(Fecha >= "2018-01-01") %>%
head(graph2)
graph2 <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
filter(Fecha >= "2018-") %>%
head(graph2)
graph3 <- graph2 %>%
filter(Fecha >= "2018")
graph3
rm(list=ls())
library(dplyr)
library("installr")
library("rio")
library(tidyverse)
library(rvest)
library(openxlsx)
library(scales)
directorio <- "/Users/IDECOR/Documents/Code/BCRA/"
setwd(directorio); getwd()
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph2 <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
head(graph2)
graph2 <- rename(graph2, Blue = Vendedor.x,
Oficial = Vendedor.y); names(graph2)
graph2$Fecha <- as.POSIXct(graph2$Fecha,
tryFormats = c("%Y-%m-%d"))
graph3 <- graph2 %>%
filter(Fecha >= "2018")
graph3
graph2 <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y)
head(graph2)
graph2 <- rename(graph2, Blue = Vendedor.x,
Oficial = Vendedor.y); names(graph2)
graph2$Fecha <- as.POSIXct(graph2$Fecha,
tryFormats = c("%Y-%m-%d"))
graph3 <- graph2 %>%
filter(Fecha >= "2018")
graph3
ggplot(data = graph3, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
ggtitle("Brecha cambiaria - Dólar Blue y Dólar Oficial") +
ylab("Valor dólar") +
scale_x_datetime(labels = date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
rename(Blue = Vendedor.x, Oficial = Vendedor.y) %>%
mutate(Fecha = as.POSIXct(Fecha, format = "%Y-%m-%d"))
graph <- graph %>%
filter(year(Fecha) >= 2018)
graph
head(graph)
ggplot(data = graph, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
ggtitle("Brecha cambiaria - Dólar Blue y Dólar Oficial") +
ylab("Valor dólar") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
rm(list=ls())
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
rename(Blue = Vendedor.x, Oficial = Vendedor.y) %>%
mutate(Fecha = as.POSIXct(Fecha, format = "%Y-%m-%d"))
graph <- graph %>%
filter(year(Fecha) >= 2019)
head(graph)
ggplot(data = graph, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
ggtitle("Brecha cambiaria - Dólar Blue y Dólar Oficial") +
ylab("Valor dólar") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
rm(list=ls())
ggplot(data = graph, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
ggtitle("Brecha cambiaria, año 2019 hasta la actualidad") +
ylab("Valor dólar") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
rename(Blue = Vendedor.x, Oficial = Vendedor.y) %>%
mutate(Fecha = as.POSIXct(Fecha, format = "%Y-%m-%d"))
graph <- graph %>%
filter(year(Fecha) >= 2019)
head(graph)
ggplot(data = graph, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
ggtitle("Brecha cambiaria, año 2019 hasta la actualidad") +
ylab("Valor dólar") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
rm(list=ls())
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
rename(Blue = Vendedor.x, Oficial = Vendedor.y) %>%
mutate(Fecha = as.POSIXct(Fecha, format = "%Y-%m-%d"))
graph <- graph %>%
filter(year(Fecha) >= 2019)
head(graph)
graph$Brecha <-
905/368
graph$Brecha <-
905/368
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
rename(Blue = Vendedor.x, Oficial = Vendedor.y) %>%
mutate(Fecha = as.POSIXct(Fecha, format = "%Y-%m-%d"))
graph <- graph %>%
filter(year(Fecha) >= 2019)
head(graph)
905/368
(905/368)*100
368*2.459
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
rename(Blue = Vendedor.x, Oficial = Vendedor.y) %>%
mutate(Fecha = as.POSIXct(Fecha, format = "%Y-%m-%d"))
graph <- graph %>%
filter(year(Fecha) >= 2019)
graph$Brecha <- (graph$Blue / graph$Oficial)*100
head(graph)
graph$Brecha <- percent_format(graph$Blue / graph$Oficial)*100)
graph$Brecha <- percent_format((graph$Blue / graph$Oficial)*100))
percent_format(graph$Brecha)
head(graph)
library(gt)
fmt_percent(graph$Brecha, decimals = 1)
percent(graph$Brecha)
head(graph)
graph$Brecha <- (graph$Blue / graph$Oficial)*100
graph$Brecha <- percent(graph$Brecha)
head(graph)
rm(list=ls())
library(dplyr)
library("installr")
library("rio")
library(tidyverse)
library(rvest)
library(openxlsx)
library(scales)
directorio <- "/Users/IDECOR/Documents/Code/BCRA/"
setwd(directorio); getwd()
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
rename(Blue = Vendedor.x, Oficial = Vendedor.y) %>%
mutate(Fecha = as.POSIXct(Fecha, format = "%Y-%m-%d"))
graph <- graph %>%
filter(year(Fecha) >= 2019)
graph$Brecha <- (graph$Blue / graph$Oficial)*100
head(graph)
graph$Brecha <- percent(graph$Brecha)
head(graph)
rm(list=ls())
library(dplyr)
library("installr")
library("rio")
library(tidyverse)
library(rvest)
library(openxlsx)
library(scales)
directorio <- "/Users/IDECOR/Documents/Code/BCRA/"
setwd(directorio); getwd()
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
rename(Blue = Vendedor.x, Oficial = Vendedor.y) %>%
mutate(Fecha = as.POSIXct(Fecha, format = "%Y-%m-%d"))
graph <- graph %>%
filter(year(Fecha) >= 2019)
graph$Brecha <- graph$Blue / graph$Oficial
head(graph)
graph$Brecha <- percent(graph$Brecha)
head(graph)
rm(list=ls())
library(dplyr)
library("installr")
library("rio")
library(tidyverse)
library(rvest)
library(openxlsx)
library(scales)
directorio <- "/Users/IDECOR/Documents/Code/BCRA/"
setwd(directorio); getwd()
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
rename(Blue = Vendedor.x, Oficial = Vendedor.y) %>%
mutate(Fecha = as.POSIXct(Fecha, format = "%Y-%m-%d"))
graph <- graph %>%
filter(year(Fecha) >= 2019)
graph$Brecha <- graph$Blue / graph$Oficial
head(graph)
graph$Brecha <- percent(graph$Brecha, accuracy = 0.1)
head(graph)
ggplot(data = graph, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
geom_bar(aes(y = Brecha), color = "lightblue") +
ggtitle("Brecha cambiaria, año 2019 hasta la actualidad") +
ylab("Valor dólar") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
#geom_bar(aes(y = Brecha), color = "lightblue") +
ggtitle("Brecha cambiaria, año 2019 hasta la actualidad") +
ylab("Valor dólar") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph, aes(x = Fecha)) +
geom_bar(aes(y = Brecha), color = "lightblue") +
ggtitle("Brecha cambiaria (en %)") +
ylab("Brecha") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph, aes(x = Fecha, fill = Brecha)) +
geom_bar(color = "lightblue") +
ggtitle("Brecha cambiaria (en %)") +
ylab("Brecha") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
library(titanic)
library(GGally)
ggplot(data = graph, aes(x = Fecha, y = Brecha, fill = Brecha)) +
geom_bar(color = "lightblue") +
ggtitle("Brecha cambiaria (en %)") +
ylab("Brecha") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph, aes(x = Fecha, y = Brecha, fill = Brecha)) +
geom_bar(position="dodge", stat="identity", color = "lightblue") +
ggtitle("Brecha cambiaria (en %)") +
ylab("Brecha") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
rm(list=ls())
ggplot(data = graph, aes(x = Fecha, fill = Brecha)) +
geom_bar(position = "dodge", stat = "identity", color = "lightblue") +
ggtitle("Brecha cambiaria (en %)") +
ylab("Brecha") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
tc <- read.csv("https://api.bluelytics.com.ar/v2/evolution.csv"); names(tc)
tc.blue <- subset(tc, tc$type == "Blue")
tc.of <- subset(tc, tc$type == "Oficial")
tc.blue <- rename(tc.blue, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.blue
tc.of <- rename(tc.of, Fecha = day, Comprador = value_buy, Vendedor = value_sell); tc.of
summary(tc.blue)
summary(tc.of)
write.xlsx(tc.blue, "dolarblue.xlsx")
write.xlsx(tc.of, "dolaroficial.xlsx")
head(tc.blue); head(tc.of)
graph <- left_join(tc.blue, tc.of, by = "Fecha"); graph
graph <- graph %>%
select(Fecha, Vendedor.x, Vendedor.y) %>%
rename(Blue = Vendedor.x, Oficial = Vendedor.y) %>%
mutate(Fecha = as.POSIXct(Fecha, format = "%Y-%m-%d"))
graph <- graph %>%
filter(year(Fecha) >= 2019)
graph$Brecha <- graph$Blue / graph$Oficial
head(graph)
graph$Brecha <- percent(graph$Brecha, accuracy = 0.1)
head(graph)
ggplot(data = graph, aes(x = Fecha)) +
geom_line(aes(y = Blue), color = "blue") +
geom_line(aes(y = Oficial), color = "red") +
#geom_bar(aes(y = Brecha), color = "lightblue") +
ggtitle("Dólar Blue vs Dólar Oficial") +
ylab("Valor dólar") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph, aes(x = Fecha, fill = Brecha)) +
geom_bar(position = "dodge", stat = "identity", color = "lightblue") +
ggtitle("Brecha cambiaria (en %)") +
ylab("Brecha") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph, aes(x = Fecha, y = Brecha)) +
geom_bar(position = "dodge", stat = "identity", color = "lightblue") +
ggtitle("Brecha cambiaria (en %)") +
ylab("Brecha") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
ggplot(data = graph, aes(x = Fecha)) +
geom_bar(aes(fill = Brecha), width = 30, color = "lightblue") +
ggtitle("Brecha cambiaria (en %)") +
ylab("Brecha") +
scale_x_datetime(labels = scales::date_format(format = "%Y-%m-%d", tz = "UTC", locale = NULL))
rm(list=ls())
url <- "https://www.bcra.gob.ar/PublicacionesEstadisticas/Historial-Leliq.asp"
file <- "/Users/IDECOR/Documents/Code/BCRA/leliqdata.html"
download.file(url, file)
leliq <- import("leliqdata.html")
convert("leliqdata.html", "leliqdata.csv")
leliq <- read.csv("/Users/IDECOR/Documents/Code/BCRA/leliqdata.csv", header = T, sep = ",", dec = ",")
leliq <- as.data.frame(leliq)
head(leliq)
leliq <- rename(leliq, Fecha_Subasta = V1,
Valor_nominal_pesos = V2,
Vto = V3,
Plazo_dias = V4,
Tasa_min = V5,
Tasa_max = V6,
Tasa_prom = V7); names(leliq)
options(scipen = 999) # Remueve notación científica
summary(leliq)
leliq$Valor_nominal_pesos <- as.numeric(gsub(",", ".", gsub("\\.", "", leliq$Valor_nominal_pesos))); class(leliq$Valor_nominal_pesos)
summary(leliq$Valor_nominal_pesos)
summary(leliq)
head(leliq)
write.xlsx(leliq, "leliqdata.xlsx")
rm(list=ls())
series <- read.xlsx("panser.xls")
series <- readxl::read_xls("panser.xls")
View(series)
series <- fread('https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/panser.xls')
series <- read.xlsx(xlsxFile = "https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/panser.xls")
url <- "https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/panser.xls"
file <- "/Users/IDECOR/Documents/Code/BCRA/seriesdata.html"
download.file(url, file)
leliq <- import("seriesdata.html")
convert("seriesdata.html", "seriesdata.csv")
leliq <- read.csv("/Users/IDECOR/Documents/Code/BCRA/seriesdata.csv", header = T, sep = ",", dec = ",")
leliq <- as.data.frame(leliq)
head(leliq)
View(series)
url <- "https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/series.xlsm"
file <- "/Users/IDECOR/Documents/Code/BCRA/series.xlsm"
download.file(url, file)
leliq <- import("series.xlsm")
convert("series.xlsm", "series.csv")
url <- "https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/series.xlsm"
file <- "/Users/IDECOR/Documents/Code/BCRA/series.xlsx"
download.file(url, file)
leliq <- import("series.xlsx")
url <- "https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/series.xlsm"
file <- "/Users/IDECOR/Documents/Code/BCRA/series.csv"
download.file(url, file)
View(series)
series <- read.csv("/Users/IDECOR/Documents/Code/BCRA/series.csv", header = T, sep = ",", dec = ",")
View(series)
url <- "https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/series.xlsm"
file <- "/Users/IDECOR/Documents/Code/BCRA/series.csv"
download.file(url, file)
url <- "https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/series.xlsm"
file <- "/Users/IDECOR/Documents/Code/BCRA/series.xlsm"
download.file(url, file)
#series <- readxl::read_xls("panser.xls")
url <- "https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/series.xlsm"
file <- "/Users/IDECOR/Documents/Code/BCRA/series.xlsm"
download.file(url, file)
series <- readxl::read_excel("/Users/IDECOR/Documents/Code/BCRA/series.xlsm", header = T, sep = ",", dec = ",")
series <- readxl::read_excel("/Users/IDECOR/Documents/Code/BCRA/series.xlsm")
#series <- readxl::read_xls("panser.xls")
url <- "https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/series.xlsm"
file <- "/Users/IDECOR/Documents/Code/BCRA/series.xlsm"
download.file(url, file)
series <- fread('https://www.bcra.gob.ar/Pdfs/PublicacionesEstadisticas/series.xlsm')
View(series)
series <- readxl::read_excel("/Users/IDECOR/Documents/Code/BCRA/series.xlsm")
View(series)
rm(list=ls())
